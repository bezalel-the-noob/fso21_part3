{"version":3,"sources":["components/Search.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","services/contacts.js","App.js","index.js"],"names":["Search","srchStr","handleSrchStrChange","value","onChange","PersonForm","handleSubmit","newName","newNumber","handleNameInputChange","handleNumberInputChange","onSubmit","type","Person","name","number","deleteButtonHandler","onClick","Persons","persons","getDeleteButtonHandler","renderedPersons","map","person","id","Notification","positive","message","notificationStyleClass","className","baseURL","getAll","axios","get","then","response","data","catch","error","Error","backEndFns","createNew","contact","config","method","url","headers","deleteContact","status","nameAlreadyExists","currentContacts","some","toLowerCase","localeCompare","_","updateExisting","notificationDuration","App","useState","setPersons","setNewName","setNewNumber","setsrchStr","notification","setNotification","useEffect","contacts","console","log","length","filter","includes","notificationComponent","event","target","preventDefault","newPerson","window","confirm","existingPerson","find","updatedContact","newPersons","concat","setTimeout","failedNotification","savedContact","failureNotification","personName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5200bf7a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Search = ({ srchStr, handleSrchStrChange }) => {\r\n  return (\r\n    <>\r\n      <p>filter shown with <input value={srchStr} onChange={handleSrchStrChange}/></p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nconst PersonForm = ({ handleSubmit, newName, newNumber, handleNameInputChange, handleNumberInputChange }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameInputChange}/>\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleNumberInputChange}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Person = ({ name, number, deleteButtonHandler }) => {\r\n  return (\r\n    <>\r\n      <p> {name} {number} <button onClick={ deleteButtonHandler }>delete</button> </p> \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Person;","import React from 'react';\r\n\r\nimport Person from './Person';\r\n\r\nconst Persons = ({ persons, getDeleteButtonHandler }) => {\r\n  let renderedPersons = persons.map(person => {\r\n    return <Person\r\n      key={person.id}\r\n      name={person.name}\r\n      number={person.number}\r\n      deleteButtonHandler={ getDeleteButtonHandler(person.name, person.id) }\r\n    />\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {\r\n        renderedPersons\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Persons;","import React from 'react';\r\n\r\nimport './../styles/Notification.css';\r\n\r\n\r\nconst Notification = ( { positive, message }) => {\r\n  let notificationStyleClass = '';\r\n\r\n  positive ? notificationStyleClass = 'positive' : notificationStyleClass = 'negative';\r\n\r\n  return (\r\n    <div className={notificationStyleClass}>\r\n      {\r\n        message\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;","import axios from 'axios';\r\n\r\nconst baseURL = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  return axios\r\n    .get(baseURL)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      throw new Error('Getting all contacts failed.');\r\n    });\r\n};\r\n\r\nconst nameAlreadyExists = (newName) => {\r\n  return getAll()\r\n    .then( currentContacts => {\r\n      return currentContacts\r\n        .some(contact => contact.name.toLowerCase().localeCompare(newName.toLowerCase()) === 0);\r\n    })\r\n    .catch( _ => {\r\n      throw new Error();\r\n    });\r\n};\r\n\r\nconst createNew = (contact) => {\r\n  const config = {\r\n    method: 'post',\r\n    url: baseURL,\r\n    data: contact,\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n  return axios(config)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch( error => {\r\n      throw error;\r\n    });\r\n};\r\n\r\nconst updateExisting = (person) => {\r\n  const config = {\r\n    method: 'put',\r\n    url: `${baseURL}/${person.id}`,\r\n    data: person,\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  return axios(config)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch( _ => {\r\n      throw new Error('Update failed.');\r\n    });\r\n}\r\n\r\nconst deleteContact = (id) => {\r\n  const config = {\r\n    method: 'delete',\r\n    url: `${baseURL}/${id}`,\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  return axios(config)\r\n    .then( response => {\r\n      if(response.status !== 204) throw new Error('Delete request failed.');\r\n    });\r\n};\r\n\r\nconst backEndFns = {\r\n  getAll,\r\n  createNew,\r\n  deleteContact,\r\n  nameAlreadyExists,\r\n  updateExisting\r\n}\r\n\r\nexport default backEndFns;","import React, { useState, useEffect } from 'react';\r\n\r\nimport Search from './components/Search';\r\nimport PersonForm from './components/PersonForm';\r\nimport Persons from './components/Persons';\r\nimport Notification from './components/Notification';\r\n\r\nimport backEndFns from './services/contacts';\r\n\r\nconst notificationDuration = 3000;\r\n\r\nconst App = () => {\r\n\r\n  const [ persons, setPersons ] = useState([]);\r\n  const [ newName, setNewName ] = useState('');\r\n  const [ newNumber, setNewNumber ] = useState('');\r\n  const [ srchStr, setsrchStr ] = useState('');\r\n  const [ notification, setNotification ] = useState(null);\r\n\r\n  useEffect(() => {\r\n    backEndFns\r\n      .getAll()\r\n      .then(contacts => {\r\n        setPersons(contacts);\r\n      })\r\n      .catch( error => {\r\n        console.log(error.message);\r\n      });\r\n  }, []);\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n\r\n    event.preventDefault();\r\n\r\n    backEndFns.nameAlreadyExists(newName)\r\n      .then( nameAlreadyExists => {\r\n        let newPerson = {\r\n          name: newName,\r\n          number: newNumber,\r\n          id: persons.length + 200\r\n        };\r\n\r\n        if(nameAlreadyExists) {\r\n          let overWrite = window.confirm(`${newName} already exists in the phonebook. Do you want to update the number?`);\r\n          if(overWrite) {\r\n            let existingPerson = persons.find(person => person.name.toLowerCase().localeCompare(newName.toLowerCase()) === 0);\r\n            newPerson.id = existingPerson.id;\r\n            backEndFns.updateExisting(newPerson)\r\n              .then( updatedContact => {\r\n\r\n                let newPersons = [...persons];\r\n                let successNotification = {\r\n                  positive: true,\r\n                  message: 'Updated successfully.'\r\n                };\r\n\r\n                newPersons = newPersons.filter(person => person.id !== updatedContact.id );\r\n                \r\n                setPersons(newPersons.concat(updatedContact));\r\n                setNewName('');\r\n                setNewNumber('');\r\n                setNotification(successNotification);\r\n                setTimeout(() => {\r\n                  setNotification(null);\r\n                }, notificationDuration);\r\n              })\r\n              .catch(error => {\r\n                let failedNotification = {\r\n                  positive: false,\r\n                  message: error.message\r\n                };\r\n\r\n                setNotification(failedNotification);\r\n                setTimeout(() => {\r\n                  setNotification(null);\r\n                }, notificationDuration);\r\n              });\r\n          }\r\n        }\r\n        else {\r\n          backEndFns.createNew(newPerson)\r\n            .then( savedContact => {\r\n              let successNotification = {\r\n                positive: true,\r\n                message: 'New entry saved successfully!'\r\n              };\r\n\r\n              setPersons(persons.concat(savedContact));\r\n              setNewName('');\r\n              setNewNumber('');\r\n\r\n              setNotification(successNotification);\r\n              setTimeout(() => {\r\n                setNotification(null);\r\n              }, notificationDuration);\r\n            })\r\n            .catch(error => {\r\n              setNewName('');\r\n              setNewNumber('');\r\n\r\n              let failureNotification = {\r\n                positive: false,\r\n                message: error.response.data.error\r\n              };\r\n\r\n              setNotification(failureNotification);\r\n              setTimeout(() => {\r\n                setNotification(null);\r\n              }, notificationDuration);\r\n            });\r\n        }\r\n      })\r\n      .catch(( _ ) => {\r\n        let failureNotification = {\r\n          positive: false,\r\n          message: 'Something went wrong. Try later.'\r\n        };\r\n\r\n        setNotification(failureNotification);\r\n        setTimeout(() => {\r\n          setNotification(null);\r\n        }, notificationDuration);\r\n      });\r\n\r\n    \r\n\r\n  };\r\n\r\n\r\n\r\n  const handleNameInputChange = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n\r\n  const handleNumberInputChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const handleSrchStrChange = (event) => {\r\n    setsrchStr(event.target.value);\r\n  };\r\n\r\n  const getDeleteButtonHandler = (personName, id) => {\r\n    return () => {\r\n      let deleteConfirmation = window.confirm(`Delete ${personName}?`);\r\n      if(!deleteConfirmation) return;\r\n      backEndFns\r\n        .deleteContact(id)\r\n        .then( _ => {\r\n          let deleteNotification = {\r\n            positive: false,\r\n            message: 'Entry deleted successfully!'\r\n          };\r\n\r\n          let newPersons = [ ...persons ];\r\n          newPersons = newPersons.filter(person => person.id !== id);\r\n          setPersons(newPersons);\r\n\r\n          setNotification(deleteNotification);\r\n          setTimeout(() => {\r\n            setNotification(null);\r\n          }, notificationDuration);\r\n      })\r\n      .catch(error => {\r\n        console.log(error.message);\r\n        let deleteNotification = {\r\n          positive: false,\r\n          message: 'Entry already deleted or does not exist.'\r\n        };\r\n\r\n        let newPersons = [ ...persons ];\r\n        newPersons = newPersons.filter(person => person.id !== id);\r\n        setPersons(newPersons);\r\n\r\n        setNotification(deleteNotification);\r\n        setTimeout(() => {\r\n          setNotification(null);\r\n        }, notificationDuration);\r\n      });\r\n    };\r\n  };\r\n\r\n\r\n  let renderedPersons;\r\n\r\n  if(srchStr.length) {\r\n    renderedPersons = persons.filter(person => {\r\n      return person.name.toLowerCase().includes(srchStr.toLowerCase());\r\n    })\r\n  }\r\n  else {\r\n    renderedPersons = persons;\r\n  }\r\n\r\n  let notificationComponent = null;\r\n\r\n  if(notification !== null) {\r\n    notificationComponent = (\r\n      <Notification\r\n        positive={notification.positive}\r\n        message={notification.message}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <h2>Phonebook</h2>\r\n      <Search\r\n        srchStr={srchStr}\r\n        handleSrchStrChange={handleSrchStrChange}\r\n      />\r\n\r\n      <h2>Add a new</h2>\r\n      <PersonForm\r\n        handleSubmit={handleSubmit}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        handleNameInputChange={handleNameInputChange}\r\n        handleNumberInputChange={handleNumberInputChange}\r\n      />\r\n\r\n      {\r\n        notificationComponent\r\n      }\r\n      <h2>Numbers</h2>\r\n      <Persons\r\n        persons={renderedPersons}\r\n        getDeleteButtonHandler={getDeleteButtonHandler}\r\n      />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}